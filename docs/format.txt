
1.1 The standard equation and the variable name
The normal Kalman Filter is described by

x_k = Ax_k-1 + Bu_k-1 + w_k-1
z_k = Hx_k + v_k

 where 
  x_i, u_i, w_i, z_i, v_i (0 <= i <= T) are each vector of length of n, l, n, m, m.
  A, B, H are each n*n, n*l, n*m matrix.
 
 x is the hidden variable, and z is the observed variable.
 u is the environmental variable.
 w and v are noise variable, whose distribution are given by
 
 p(w) ~ N(0, Q)
 p(v) ~ N(0, R)

 We assume initial state of hidden variable to be

 p(x_0) ~ N(mu, S)

1.2 Formats of results

After estimation, the result file would be generated.
Here, we explain the format of the file.
Actually, the real file is written in only numbers and have no comments.

--------------------------------------------------------------------------------
result file
--------------------------------------------------------------------------------

3 % n; dimension of hidden variable
1 % l; dimension of environmental variable
1 % m; dimension of observed variable

% matrix A
1.4 0.8 0.7
0.8 1.1 0.9
1.2 0.6 1.5

% matrix B
1.2
0.6
2.3

% matrix H
1.9 1.0 0.5

% matrix Q; Covariance matrix of noise variable in hidden layer. Here, it assumes to be diagonal.)
2.0 1.0 1.0

% matrix R; Covariance matrix of noise variable in observed layer. Here, it assumes to be diagonal.)
1.0

% log-likelihood of the model
-207.7224043899505

% mu; Mean of initial state.
-0.019788124111994754	-0.08204529075120287	0.04100776405724752

% S; Covariance matrix of initial state.
1.0	1.0	1.0

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

1.3 Condition parameters for Estimation

There are some parameters to conduct EM Algorithm.
We can arrange them using -c option.
This section is now under construction.

===========================================

  Basics

Basically, parameters are written as

[Parameter1]=value1 value2 value3,value4 value5 ...
[Parameter2]=value1 value2 value3,value4 value5 ...

Parameters are written in left side and values are right side of the equal symbol.
Values are basically space separated. Values are separated by comma in some meanings.

=====================================================

 hidden variable related parameters

* emHid
 This parameter specifies how the dimension of hidden variables are decided.
 Since we do not know what the system is before estimating the parameters, we cannot decide what the dimension of hidden variables.
 So we decided to take parameters using some scheme.
 Examples are shown below.

crossValid ... decide the dimension of hidden variable using cross validation. 1から始めていくパターン
fixed ... This also decide the dimension of hidden parameters using cross validation, but is from from some candidates.

ex.)1
emHid=crossValid

 Hidden variable is decided only by cross validation.

ex.)
emHid=fixed,2 3 4

 Hidden variable is decided by cross validation, but candidates are only 2, 3, and 4.

* foldNum
 This parameter is used only when cross validation is conducted.
 This parameter specifies the fold number of cross validation.

ex.)
foldNum=4

* crossValidPredictFile

 You don't need to specify this parameter.

ex.)
crossValidPredictFile=ahoaho.tsv

=====================================================

 EM algorithm itself related parameters

* delta
 打ち切りの時間

* emTime
 This parameter specifies the number of EM何回で打ち切るか
 理想を言えば変化の差が小さくなったときとかbut EM algorithm sometimes 収束が遅い。
 So, このような形で強制的に打ち切る

=====================================================

 ランダムサーチ関連のパラメータ達
 このプログラムでは、過学習を防ぐため、EM algorithmの初期値をランダムサーチを用いていくつか与えて、数回回して一番対数尤度が一番大きいものを選択

* emRand
 ランダムサーチの回数

* emShallow
 This parameter specifies the number of ランダムサーチごとのEMアルゴリズムの打ち切り回数
 説明が難しい


=====================================================

Generating parameters for initializing (EM algorithm needs initial value)

 Basically, generated from Gaussian distribution.
 全部のパラメータを書くのはややこしくて書ききれない。

Ainit %
Binit %
Hinit %
Qinit %
Rinit %
initStateMeanInit %
initStateCovarianceInit %

=====================================================

Optimization parameters

　こちらもややこしくて書ききるのが難しい
　L1正則化、L2正則化などの条件を書く

AOpt %
BOpt %
HOpt %
QOpt %
ROpt %
initStateMeanOpt %
initStateCovarianceOpt %

=====================================================

Other parameters

* parallelThreadNum

 Maximum of the number of parallel threads used in the program.

=====================================================
